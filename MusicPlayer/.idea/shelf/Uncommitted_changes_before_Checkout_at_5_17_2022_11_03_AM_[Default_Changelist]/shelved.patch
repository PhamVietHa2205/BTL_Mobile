Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 32\r\n    defaultConfig {\r\n        applicationId \"com.example.application.musicplayer\"\r\n        minSdkVersion 21\r\n        targetSdkVersion 32\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation 'de.hdodenhof:circleimageview:2.1.0'\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.0.0'\r\n    implementation 'com.google.android.material:material:1.0.0'\r\n    // media\r\n    implementation 'androidx.appcompat:appcompat:1.4.1'\r\n    implementation 'androidx.core:core:1.7.0'\r\n    implementation 'androidx.media:media:1.6.0'\r\n    // end media\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'androidx.annotation:annotation:1.2.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'\r\n    //firebase\r\n    implementation 'com.google.firebase:firebase-storage:20.0.0'\r\n    implementation 'com.google.firebase:firebase-database:20.0.0'\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 5215fb6b772a310d5a2be3a2752c4cacd941fe8c)
+++ b/app/build.gradle	(date 1652760193706)
@@ -39,6 +39,7 @@
     androidTestImplementation 'androidx.test.ext:junit:1.1.1'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
     //firebase
-    implementation 'com.google.firebase:firebase-storage:20.0.0'
-    implementation 'com.google.firebase:firebase-database:20.0.0'
+    implementation platform('com.google.firebase:firebase-bom:30.0.1')
+    implementation 'com.google.firebase:firebase-storage'
+    implementation 'com.google.firebase:firebase-database'
 }
Index: app/src/main/java/com/example/application/musicplayer/Fragments/DeviceSongFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.application.musicplayer.Fragments;\r\n\r\n\r\nimport android.content.ContentResolver;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.database.Cursor;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.ListFragment;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ListView;\r\n\r\nimport com.example.application.musicplayer.Adapter.SongAdapter;\r\nimport com.example.application.musicplayer.Model.SongsList;\r\nimport com.example.application.musicplayer.R;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\n\r\npublic class DeviceSongFragment extends ListFragment {\r\n\r\n\r\n    private static ContentResolver contentResolver1;\r\n\r\n    public ArrayList<SongsList> songsList;\r\n    public ArrayList<SongsList> newList;\r\n\r\n    private ListView listView;\r\n\r\n    private createDataParse createDataParse;\r\n    private ContentResolver contentResolver;\r\n\r\n    public static Fragment getInstance(int position, ContentResolver mcontentResolver) {\r\n        Bundle bundle = new Bundle();\r\n        bundle.putInt(\"pos\", position);\r\n        DeviceSongFragment tabFragment = new DeviceSongFragment();\r\n        tabFragment.setArguments(bundle);\r\n        contentResolver1 = mcontentResolver;\r\n        return tabFragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onAttach(Context context) {\r\n        super.onAttach(context);\r\n        createDataParse = (createDataParse) context;\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.fragment_tab, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        listView = view.findViewById(R.id.list_playlist);\r\n        contentResolver = contentResolver1;\r\n        setContent();\r\n    }\r\n\r\n    /**\r\n     * Setting the content in the listView and sending the data to the Activity\r\n     */\r\n    public void setContent() {\r\n        boolean searchedList = false;\r\n        songsList = new ArrayList<>();\r\n        newList = new ArrayList<>();\r\n        getMusic();\r\n        SongAdapter adapter = new SongAdapter(getContext(), songsList);\r\n        if (!createDataParse.queryText().equals(\"\")) {\r\n            adapter = onQueryTextChange();\r\n            adapter.notifyDataSetChanged();\r\n            searchedList = true;\r\n        } else {\r\n            searchedList = false;\r\n        }\r\n        createDataParse.getLength(songsList.size());\r\n        listView.setAdapter(adapter);\r\n\r\n        final boolean finalSearchedList = searchedList;\r\n        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n                // Toast.makeText(getContext(), \"You clicked :\\n\" + songsList.get(position), Toast.LENGTH_SHORT).show();\r\n                if (!finalSearchedList) {\r\n                    createDataParse.onDataPass(songsList.get(position).getTitle(), songsList.get(position).getLink());\r\n                    createDataParse.fullSongList(songsList, position);\r\n                } else {\r\n                    createDataParse.onDataPass(newList.get(position).getTitle(), newList.get(position).getLink());\r\n                    createDataParse.fullSongList(songsList, position);\r\n                }\r\n            }\r\n        });\r\n\r\n        listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\r\n            @Override\r\n            public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\r\n                showDialog(position);\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public void getMusic() {\r\n        Uri songUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\r\n        Cursor songCursor = contentResolver.query(songUri, null, null, null, null);\r\n        if (songCursor != null && songCursor.moveToFirst()) {\r\n            int songTitle = songCursor.getColumnIndex(MediaStore.Audio.Media.TITLE);\r\n            int songArtist = songCursor.getColumnIndex(MediaStore.Audio.Media.ARTIST);\r\n            int songPath = songCursor.getColumnIndex(MediaStore.Audio.Media.DATA);\r\n\r\n            do {\r\n                songsList.add(new SongsList(songCursor.getString(songTitle), songCursor.getString(songArtist), songCursor.getString(songPath)));\r\n            } while (songCursor.moveToNext());\r\n            songCursor.close();\r\n        }\r\n        Collections.sort(songsList);\r\n    }\r\n\r\n    public SongAdapter onQueryTextChange() {\r\n        String text = createDataParse.queryText();\r\n        for (SongsList songs : songsList) {\r\n            String title = songs.getTitle().toLowerCase();\r\n            if (title.contains(text)) {\r\n                newList.add(songs);\r\n            }\r\n        }\r\n        return new SongAdapter(getContext(), newList);\r\n\r\n    }\r\n\r\n    private void showDialog(final int position) {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n        builder.setMessage(getString(R.string.play_next))\r\n                .setCancelable(true)\r\n                .setNegativeButton(R.string.no, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n\r\n                    }\r\n                })\r\n                .setPositiveButton(R.string.yes, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        createDataParse.currentSong(songsList.get(position));\r\n                        setContent();\r\n                    }\r\n                });\r\n        AlertDialog alertDialog = builder.create();\r\n        alertDialog.show();\r\n    }\r\n\r\n    public interface createDataParse {\r\n        public void onDataPass(String name, String path);\r\n\r\n        public void fullSongList(ArrayList<SongsList> songList, int position);\r\n\r\n        public String queryText();\r\n\r\n        public void currentSong(SongsList songsList);\r\n        public void getLength(int length);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/application/musicplayer/Fragments/DeviceSongFragment.java b/app/src/main/java/com/example/application/musicplayer/Fragments/DeviceSongFragment.java
--- a/app/src/main/java/com/example/application/musicplayer/Fragments/DeviceSongFragment.java	(revision 5215fb6b772a310d5a2be3a2752c4cacd941fe8c)
+++ b/app/src/main/java/com/example/application/musicplayer/Fragments/DeviceSongFragment.java	(date 1652712568810)
@@ -13,6 +13,8 @@
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.ListFragment;
 import androidx.appcompat.app.AlertDialog;
+
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -69,6 +71,7 @@
     public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         listView = view.findViewById(R.id.list_playlist);
         contentResolver = contentResolver1;
+        Log.e("contentResolver", " " + contentResolver);
         setContent();
     }
 
@@ -118,7 +121,9 @@
 
     public void getMusic() {
         Uri songUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;
-        Cursor songCursor = contentResolver.query(songUri, null, null, null, null);
+        Log.v("contentResolver", "" + contentResolver);
+        contentResolver = getContext().getContentResolver();
+        Cursor songCursor = getContext().getContentResolver().query(songUri, null, null, null, null);
         if (songCursor != null && songCursor.moveToFirst()) {
             int songTitle = songCursor.getColumnIndex(MediaStore.Audio.Media.TITLE);
             int songArtist = songCursor.getColumnIndex(MediaStore.Audio.Media.ARTIST);
Index: app/src/main/java/com/example/application/musicplayer/Activity/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.application.musicplayer.Activity;\r\n\r\nimport android.Manifest;\r\nimport android.app.NotificationChannel;\r\nimport android.app.NotificationManager;\r\nimport android.app.SearchManager;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.pm.PackageManager;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Build;\r\nimport android.os.Handler;\r\nimport androidx.annotation.NonNull;\r\n\r\nimport com.example.application.musicplayer.Fragments.CloudSongFragment;\r\nimport com.example.application.musicplayer.Model.CreateNotification;\r\nimport com.example.application.musicplayer.Service.OnClearFromRecentService;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.viewpager.widget.ViewPager;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport android.os.Bundle;\r\n\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport android.view.View;\r\nimport android.widget.ImageButton;\r\nimport android.widget.SearchView;\r\nimport android.widget.SeekBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.application.musicplayer.Adapter.ViewPagerAdapter;\r\nimport com.example.application.musicplayer.DB.FavoritesOperations;\r\nimport com.example.application.musicplayer.Fragments.DeviceSongFragment;\r\nimport com.example.application.musicplayer.Fragments.CurrentSongFragment;\r\nimport com.example.application.musicplayer.Fragments.FavSongFragment;\r\nimport com.example.application.musicplayer.Model.SongsList;\r\nimport com.example.application.musicplayer.R;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\n\r\npublic class MainActivity extends AppCompatActivity implements View.OnClickListener, DeviceSongFragment.createDataParse, FavSongFragment.createDataParsed, CurrentSongFragment.createDataParsed, CloudSongFragment.createDataParse {\r\n\r\n    private Menu menu;\r\n\r\n    private ImageButton imgBtnPlayPause, imgbtnReplay, imgbtnShuffle, imgBtnPrev, imgBtnNext, imgBtnSetting;\r\n    private TabLayout tabLayout;\r\n    private ViewPager viewPager;\r\n    private SeekBar seekbarController;\r\n    private DrawerLayout mDrawerLayout;\r\n    private TextView tvCurrentTime, tvTotalTime;\r\n    private int playMode;\r\n    private int playButton = R.drawable.pause_icon;\r\n    private ArrayList<SongsList> songList;\r\n    private ArrayList<SongsList> defaultSongList = new ArrayList<>();\r\n    private int currentPosition;\r\n    private String searchText = \"\";\r\n    private SongsList currSong;\r\n\r\n    private boolean checkFlag = false, repeatFlag = false, shuffleFlag = false,  playContinueFlag = false, favFlag = true, playlistFlag = false;\r\n    private final int MY_PERMISSION_REQUEST = 100;\r\n    private int allSongLength;\r\n\r\n    MediaPlayer mediaPlayer;\r\n    Handler handler;\r\n    Runnable runnable;\r\n    NotificationManager notificationManager;\r\n    Intent openNotification;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        createNotificationChannel();\r\n        Log.e(\"ABC\", \"Started\");\r\n        registerReceiver(broadcastReceiver, new IntentFilter(\"TRACKS_TRACKS\"));\r\n        openNotification = new Intent(getBaseContext(), OnClearFromRecentService.class);\r\n        startService(openNotification);\r\n        init();\r\n        grantedPermission();\r\n    }\r\n\r\n    BroadcastReceiver broadcastReceiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            String action = intent.getExtras().getString(\"actionname\");\r\n            switch (action) {\r\n                case CreateNotification.ACTION_PREV:\r\n                    playPrevious();\r\n                    break;\r\n                case CreateNotification.ACTION_PLAY:\r\n                    playPause();\r\n                    break;\r\n                case CreateNotification.ACTION_NEXT:\r\n                    playNext();\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Initialising the views\r\n     */\r\n\r\n    private void init() {\r\n\r\n        imgBtnPrev = findViewById(R.id.img_btn_previous);\r\n        imgBtnNext = findViewById(R.id.img_btn_next);\r\n        imgbtnReplay = findViewById(R.id.img_btn_replay);\r\n        imgbtnShuffle = findViewById(R.id.img_btn_shuffle);\r\n        imgBtnSetting = findViewById(R.id.img_btn_setting);\r\n\r\n        tvCurrentTime = findViewById(R.id.tv_current_time);\r\n        tvTotalTime = findViewById(R.id.tv_total_time);\r\n        FloatingActionButton refreshSongs = findViewById(R.id.btn_refresh);\r\n        seekbarController = findViewById(R.id.seekbar_controller);\r\n        viewPager = findViewById(R.id.songs_viewpager);\r\n        NavigationView navigationView = findViewById(R.id.nav_view);\r\n        mDrawerLayout = findViewById(R.id.drawer_layout);\r\n        imgBtnPlayPause = findViewById(R.id.img_btn_play);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        handler = new Handler();\r\n        mediaPlayer = new MediaPlayer();\r\n\r\n        toolbar.setTitleTextColor(getResources().getColor(R.color.text_color));\r\n        setSupportActionBar(toolbar);\r\n\r\n        ActionBar actionBar = getSupportActionBar();\r\n        assert actionBar != null;\r\n        actionBar.setDisplayHomeAsUpEnabled(true);\r\n        actionBar.setHomeAsUpIndicator(R.drawable.menu_icon);\r\n\r\n        imgBtnNext.setOnClickListener(this);\r\n        imgBtnPrev.setOnClickListener(this);\r\n        imgbtnReplay.setOnClickListener(this);\r\n        imgbtnShuffle.setOnClickListener(this);\r\n        refreshSongs.setOnClickListener(this);\r\n        imgBtnPlayPause.setOnClickListener(this);\r\n        imgBtnSetting.setOnClickListener(this);\r\n\r\n        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {\r\n            @Override\r\n            public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                item.setChecked(true);\r\n                mDrawerLayout.closeDrawers();\r\n                switch (item.getItemId()) {\r\n                    case R.id.nav_about:\r\n                        about();\r\n                        break;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to ask user to grant the permission.\r\n     */\r\n\r\n    private void grantedPermission() {\r\n        if (ContextCompat.checkSelfPermission(MainActivity.this,\r\n                Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(MainActivity.this,\r\n                    new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, MY_PERMISSION_REQUEST);\r\n            if (ActivityCompat.shouldShowRequestPermissionRationale(MainActivity.this,\r\n                    Manifest.permission.READ_EXTERNAL_STORAGE)) {\r\n                ActivityCompat.requestPermissions(MainActivity.this,\r\n                        new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, MY_PERMISSION_REQUEST);\r\n            } else {\r\n                if (ContextCompat.checkSelfPermission(MainActivity.this,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\r\n                    Snackbar snackbar = Snackbar.make(mDrawerLayout, \"Provide the Storage Permission\", Snackbar.LENGTH_LONG);\r\n                    snackbar.show();\r\n                }\r\n            }\r\n        } else {\r\n            setPagerLayout();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checking if the permission is granted or not\r\n     *\r\n     * @param requestCode\r\n     * @param permissions\r\n     * @param grantResults\r\n     */\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        switch (requestCode) {\r\n            case MY_PERMISSION_REQUEST:\r\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    if (ContextCompat.checkSelfPermission(MainActivity.this,\r\n                            Manifest.permission.READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {\r\n                        Toast.makeText(this, \"Permission Granted!\", Toast.LENGTH_SHORT).show();\r\n                        setPagerLayout();\r\n                    } else {\r\n                        Snackbar snackbar = Snackbar.make(mDrawerLayout, \"Provide the Storage Permission\", Snackbar.LENGTH_LONG);\r\n                        snackbar.show();\r\n                        finish();\r\n                    }\r\n                }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setting up the tab layout with the viewpager in it.\r\n     */\r\n\r\n    private void createNotificationChannel() {\r\n        // Create the NotificationChannel, but only on API 26+ because\r\n        // the NotificationChannel class is new and not in the support library\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\r\n            CharSequence name = \"Show Notification\";\r\n            String description = \"This allows you to show notification\";\r\n            int importance = NotificationManager.IMPORTANCE_DEFAULT;\r\n            NotificationChannel channel = new NotificationChannel(CreateNotification.CHANNEL_ID, name, importance);\r\n            channel.setDescription(description);\r\n            // Register the channel with the system; you can't change the importance\r\n            // or other notification behaviors after this\r\n            notificationManager = getSystemService(NotificationManager.class);\r\n            notificationManager.createNotificationChannel(channel);\r\n        }\r\n    }\r\n\r\n    private void setPagerLayout() {\r\n        ViewPagerAdapter adapter = new ViewPagerAdapter(getSupportFragmentManager(), getContentResolver());\r\n        viewPager.setAdapter(adapter);\r\n        viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\r\n            @Override\r\n            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onPageSelected(int position) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onPageScrollStateChanged(int state) {\r\n\r\n            }\r\n        });\r\n\r\n        tabLayout = findViewById(R.id.tabs);\r\n        tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);\r\n        tabLayout.setupWithViewPager(viewPager);\r\n        tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n                viewPager.setCurrentItem(tab.getPosition());\r\n            }\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Function to show the dialog for about us.\r\n     */\r\n    private void about() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setTitle(getString(R.string.about))\r\n                .setMessage(getString(R.string.about_text))\r\n                .setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n\r\n                    }\r\n                });\r\n        AlertDialog alertDialog = builder.create();\r\n        alertDialog.show();\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        this.menu = menu;\r\n        getMenuInflater().inflate(R.menu.action_bar_menu, menu);\r\n        SearchManager manager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);\r\n        SearchView searchView = (SearchView) menu.findItem(R.id.menu_search).getActionView();\r\n        searchView.setSearchableInfo(manager.getSearchableInfo(getComponentName()));\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                searchText = newText;\r\n                queryText();\r\n                setPagerLayout();\r\n                return true;\r\n            }\r\n        });\r\n\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n\r\n        switch (item.getItemId()) {\r\n            case android.R.id.home:\r\n                mDrawerLayout.openDrawer(GravityCompat.START);\r\n                return true;\r\n            case R.id.menu_search:\r\n                Toast.makeText(this, \"Search\", Toast.LENGTH_SHORT).show();\r\n                return true;\r\n            case R.id.menu_favorites:\r\n                if (checkFlag)\r\n                    if (mediaPlayer != null) {\r\n                        if (favFlag) {\r\n                            Toast.makeText(this, \"Added to Favorites\", Toast.LENGTH_SHORT).show();\r\n                            item.setIcon(R.drawable.ic_favorite_filled);\r\n                            SongsList favList = new SongsList(songList.get(currentPosition).getTitle(),\r\n                                    songList.get(currentPosition).getSubTitle(), songList.get(currentPosition).getLink());\r\n                            FavoritesOperations favoritesOperations = new FavoritesOperations(this);\r\n                            favoritesOperations.addSongFav(favList);\r\n                            setPagerLayout();\r\n                            favFlag = false;\r\n                        } else {\r\n                            item.setIcon(R.drawable.favorite_icon);\r\n                            favFlag = true;\r\n                        }\r\n                    }\r\n                return true;\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Function to handle the click events.\r\n     *\r\n     * @param v\r\n     */\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.img_btn_play:\r\n                playPause();\r\n                break;\r\n            case R.id.btn_refresh:\r\n                Toast.makeText(this, \"Refreshing\", Toast.LENGTH_SHORT).show();\r\n                setPagerLayout();\r\n                break;\r\n            case R.id.img_btn_replay:\r\n\r\n                if (repeatFlag) {\r\n                    Toast.makeText(this, \"Replaying Removed..\", Toast.LENGTH_SHORT).show();\r\n                    mediaPlayer.setLooping(false);\r\n                    repeatFlag = false;\r\n                } else {\r\n                    Toast.makeText(this, \"Replaying Added..\", Toast.LENGTH_SHORT).show();\r\n                    mediaPlayer.setLooping(true);\r\n                    repeatFlag = true;\r\n                }\r\n                break;\r\n            case R.id.img_btn_shuffle:\r\n                if (shuffleFlag) {\r\n                    Toast.makeText(this, \"Shuffling Removed..\", Toast.LENGTH_SHORT).show();\r\n                    songList = defaultSongList;\r\n                } else {\r\n                    Toast.makeText(this, \"Shuffling Added..\", Toast.LENGTH_SHORT).show();\r\n                    defaultSongList = songList;\r\n                    Collections.shuffle(songList);\r\n\r\n                }\r\n                break;\r\n            case R.id.img_btn_previous:\r\n                playPrevious();\r\n                break;\r\n            case R.id.img_btn_next:\r\n                playNext();\r\n                break;\r\n            case R.id.img_btn_setting:\r\n                if (!playContinueFlag) {\r\n                    playContinueFlag = true;\r\n                    Toast.makeText(this, \"Loop Added\", Toast.LENGTH_SHORT).show();\r\n                } else {\r\n                    playContinueFlag = false;\r\n                    Toast.makeText(this, \"Loop Removed\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void playPause() {\r\n        if (checkFlag) {\r\n            if (mediaPlayer.isPlaying()) {\r\n                mediaPlayer.pause();\r\n                playButton = R.drawable.play_icon;\r\n            } else if (!mediaPlayer.isPlaying()) {\r\n                mediaPlayer.start();\r\n                playButton = R.drawable.pause_icon;\r\n                playCycle();\r\n            }\r\n        } else {\r\n            Toast.makeText(this, \"Select the Song ..\", Toast.LENGTH_SHORT).show();\r\n        }\r\n        imgBtnPlayPause.setImageResource(playButton);\r\n        CreateNotification.createNotification(this, songList.get(currentPosition), playButton);\r\n    }\r\n    private void playNext() {\r\n        if (checkFlag) {\r\n            if (currentPosition + 1 < songList.size()) {\r\n                attachMusic(songList.get(currentPosition + 1).getTitle(), songList.get(currentPosition + 1).getLink());\r\n                currentPosition += 1;\r\n            } else {\r\n                Toast.makeText(this, \"Playlist Ended\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } else {\r\n            Toast.makeText(this, \"Select the Song ..\", Toast.LENGTH_SHORT).show();\r\n        }\r\n        playButton = R.drawable.pause_icon;\r\n        CreateNotification.createNotification(this, songList.get(currentPosition), playButton);\r\n    }\r\n\r\n    private void playPrevious() {\r\n        if (checkFlag) {\r\n            if (mediaPlayer.getCurrentPosition() > 10) {\r\n                if (currentPosition - 1 > -1) {\r\n                    attachMusic(songList.get(currentPosition - 1).getTitle(), songList.get(currentPosition - 1).getLink());\r\n                    currentPosition = currentPosition - 1;\r\n                } else {\r\n                    attachMusic(songList.get(currentPosition).getTitle(), songList.get(currentPosition).getLink());\r\n                }\r\n            } else {\r\n                attachMusic(songList.get(currentPosition).getTitle(), songList.get(currentPosition).getLink());\r\n            }\r\n        } else {\r\n            Toast.makeText(this, \"Select a Song . .\", Toast.LENGTH_SHORT).show();\r\n        }\r\n        playButton = R.drawable.pause_icon;\r\n        CreateNotification.createNotification(this, songList.get(currentPosition), playButton);\r\n    }\r\n\r\n    /**\r\n     * Function to attach the song to the music player\r\n     *\r\n     * @param name\r\n     * @param path\r\n     */\r\n\r\n    private void attachMusic(String name, String path) {\r\n        imgBtnPlayPause.setImageResource(R.drawable.play_icon);\r\n        setTitle(name);\r\n        menu.getItem(1).setIcon(R.drawable.favorite_icon);\r\n        favFlag = true;\r\n\r\n        try {\r\n            mediaPlayer.reset();\r\n            mediaPlayer.setDataSource(path);\r\n            mediaPlayer.prepare();\r\n            setControls();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        mediaPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {\r\n            @Override\r\n            public void onCompletion(MediaPlayer mp) {\r\n                imgBtnPlayPause.setImageResource(R.drawable.play_icon);\r\n                if (playContinueFlag) {\r\n                    if (currentPosition + 1 < songList.size()) {\r\n                        attachMusic(songList.get(currentPosition + 1).getTitle(), songList.get(currentPosition + 1).getLink());\r\n                        currentPosition += 1;\r\n                    } else {\r\n                        Toast.makeText(MainActivity.this, \"PlayList Ended\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to set the controls according to the song\r\n     */\r\n\r\n    private void setControls() {\r\n        seekbarController.setMax(mediaPlayer.getDuration());\r\n        mediaPlayer.start();\r\n        playCycle();\r\n        checkFlag = true;\r\n        if (mediaPlayer.isPlaying()) {\r\n            imgBtnPlayPause.setImageResource(R.drawable.pause_icon);\r\n            tvTotalTime.setText(getTimeFormatted(mediaPlayer.getDuration()));\r\n        }\r\n\r\n        seekbarController.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {\r\n            @Override\r\n            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\r\n                if (fromUser) {\r\n                    mediaPlayer.seekTo(progress);\r\n                    tvCurrentTime.setText(getTimeFormatted(progress));\r\n                }\r\n                mediaPlayer.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {\r\n                    @Override\r\n                    public void onCompletion(MediaPlayer mediaPlayer) {\r\n                        playNext();\r\n                    }\r\n                });\r\n            }\r\n\r\n            @Override\r\n            public void onStartTrackingTouch(SeekBar seekBar) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onStopTrackingTouch(SeekBar seekBar) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to play the song using a thread\r\n     */\r\n    private void playCycle() {\r\n        try {\r\n            seekbarController.setProgress(mediaPlayer.getCurrentPosition());\r\n            tvCurrentTime.setText(getTimeFormatted(mediaPlayer.getCurrentPosition()));\r\n            if (mediaPlayer.isPlaying()) {\r\n                runnable = new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        playCycle();\r\n\r\n                    }\r\n                };\r\n                handler.postDelayed(runnable, 100);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private String getTimeFormatted(long milliSeconds) {\r\n        String finalTimerString = \"\";\r\n        String secondsString;\r\n\r\n        //Converting total duration into time\r\n        int hours = (int) (milliSeconds / 3600000);\r\n        int minutes = (int) (milliSeconds % 3600000) / 60000;\r\n        int seconds = (int) ((milliSeconds % 3600000) % 60000 / 1000);\r\n\r\n        // Adding hours if any\r\n        if (hours > 0)\r\n            finalTimerString = hours + \":\";\r\n\r\n        // Prepending 0 to seconds if it is one digit\r\n        if (seconds < 10)\r\n            secondsString = \"0\" + seconds;\r\n        else\r\n            secondsString = \"\" + seconds;\r\n\r\n        finalTimerString = finalTimerString + minutes + \":\" + secondsString;\r\n\r\n        // Return timer String;\r\n        return finalTimerString;\r\n    }\r\n\r\n\r\n    /**\r\n     * Function Overrided to receive the data from the fragment\r\n     *\r\n     * @param name\r\n     * @param path\r\n     */\r\n\r\n    @Override\r\n    public void onDataPass(String name, String path) {\r\n        Toast.makeText(this, name, Toast.LENGTH_LONG).show();\r\n        attachMusic(name, path);\r\n    }\r\n\r\n    @Override\r\n    public void getLength(int length) {\r\n        this.allSongLength = length;\r\n    }\r\n\r\n    @Override\r\n    public void fullSongList(ArrayList<SongsList> songList, int position) {\r\n        this.songList = songList;\r\n        this.currentPosition = position;\r\n        this.playlistFlag = songList.size() == allSongLength;\r\n        Log.v(\"mainSong\", \"songlist size \" + songList.size() + \" \" + allSongLength);\r\n        this.playContinueFlag = !playlistFlag;\r\n        Log.v(\"mainSong\", \"playContinueFlag \" + playContinueFlag);\r\n        CreateNotification.createNotification(this, songList.get(currentPosition), R.drawable.pause_icon);\r\n    }\r\n\r\n    @Override\r\n    public String queryText() {\r\n        return searchText.toLowerCase();\r\n    }\r\n\r\n    @Override\r\n    public SongsList getSong() {\r\n        currentPosition = -1;\r\n        return currSong;\r\n    }\r\n\r\n    @Override\r\n    public boolean getPlaylistFlag() {\r\n        return playlistFlag;\r\n    }\r\n\r\n    @Override\r\n    public void currentSong(SongsList songsList) {\r\n        this.currSong = songsList;\r\n    }\r\n\r\n    @Override\r\n    public int getPosition() {\r\n        return currentPosition;\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        stopService(openNotification);\r\n        notificationManager.cancel(1);\r\n        unregisterReceiver(broadcastReceiver);\r\n        super.onDestroy();\r\n        mediaPlayer.release();\r\n        handler.removeCallbacks(runnable);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/application/musicplayer/Activity/MainActivity.java b/app/src/main/java/com/example/application/musicplayer/Activity/MainActivity.java
--- a/app/src/main/java/com/example/application/musicplayer/Activity/MainActivity.java	(revision 5215fb6b772a310d5a2be3a2752c4cacd941fe8c)
+++ b/app/src/main/java/com/example/application/musicplayer/Activity/MainActivity.java	(date 1652756117501)
@@ -211,7 +211,7 @@
                         Toast.makeText(this, "Permission Granted!", Toast.LENGTH_SHORT).show();
                         setPagerLayout();
                     } else {
-                        Snackbar snackbar = Snackbar.make(mDrawerLayout, "Provide the Storage Permission", Snackbar.LENGTH_LONG);
+                        Snackbar snackbar = Snackbar.make(mDrawerLayout, "Provide the Storage Permission1", Snackbar.LENGTH_LONG);
                         snackbar.show();
                         finish();
                     }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/BTL_Mobile/MusicPlayer/app/src/main/res/layout/activity_main.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/BTL_Mobile/MusicPlayer/app/src/main/res/layout/drawer_header_layout.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/BTL_Mobile/MusicPlayer/app/src/main/res/layout/fragment_tab.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/BTL_Mobile/MusicPlayer/app/src/main/res/layout/player_layout.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/BTL_Mobile/MusicPlayer/app/src/main/res/layout/playlist_items.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/BTL_Mobile/MusicPlayer/app/src/main/res/menu/action_bar_menu.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/BTL_Mobile/MusicPlayer/app/src/main/res/menu/navigation_menu.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/headset_icon.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/ic_music.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/ic_music_player.xml\" value=\"0.142\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/ic_settings.xml\" value=\"0.142\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/menu_icon.xml\" value=\"0.142\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/next_icon.xml\" value=\"0.142\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/rate_icon.xml\" value=\"0.142\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/refresh_icon.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/search_icon.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/shuffle_icon.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/theme_color_icon.xml\" value=\"0.142\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/layout/activity_main.xml\" value=\"0.152\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/layout/drawer_header_layout.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/layout/fragment_tab.xml\" value=\"0.1068840579710145\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/layout/player_layout.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/layout/playlist_items.xml\" value=\"0.1068840579710145\" />\r\n        <entry key=\"..\\:/Documents/PhatTrienUngDungDiDong/BTL_Mobile/MusicPlayer/app/src/main/res/layout/song_details.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/nguye/AndroidStudioProjects/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/about_icon.xml\" value=\"0.108\" />\r\n        <entry key=\"..\\:/Users/nguye/AndroidStudioProjects/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/favorite_icon.xml\" value=\"0.108\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"NullableNotNullManager\">\r\n    <option name=\"myDefaultNullable\" value=\"android.support.annotation.Nullable\" />\r\n    <option name=\"myDefaultNotNull\" value=\"android.support.annotation.NonNull\" />\r\n    <option name=\"myNullables\">\r\n      <value>\r\n        <list size=\"12\">\r\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.Nullable\" />\r\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nullable\" />\r\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"javax.annotation.CheckForNull\" />\r\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.Nullable\" />\r\n          <item index=\"4\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.Nullable\" />\r\n          <item index=\"5\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NullableDecl\" />\r\n          <item index=\"6\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.Nullable\" />\r\n          <item index=\"7\" class=\"java.lang.String\" itemvalue=\"org.eclipse.jdt.annotation.Nullable\" />\r\n          <item index=\"8\" class=\"java.lang.String\" itemvalue=\"com.android.annotations.Nullable\" />\r\n          <item index=\"9\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.RecentlyNullable\" />\r\n          <item index=\"10\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.qual.Nullable\" />\r\n          <item index=\"11\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NullableType\" />\r\n        </list>\r\n      </value>\r\n    </option>\r\n    <option name=\"myNotNulls\">\r\n      <value>\r\n        <list size=\"11\">\r\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.NotNull\" />\r\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nonnull\" />\r\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.NonNull\" />\r\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.NonNull\" />\r\n          <item index=\"4\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.RecentlyNonNull\" />\r\n          <item index=\"5\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.qual.NonNull\" />\r\n          <item index=\"6\" class=\"java.lang.String\" itemvalue=\"com.android.annotations.NonNull\" />\r\n          <item index=\"7\" class=\"java.lang.String\" itemvalue=\"androidx.annotation.NonNull\" />\r\n          <item index=\"8\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NonNullType\" />\r\n          <item index=\"9\" class=\"java.lang.String\" itemvalue=\"org.checkerframework.checker.nullness.compatqual.NonNullDecl\" />\r\n          <item index=\"10\" class=\"java.lang.String\" itemvalue=\"org.eclipse.jdt.annotation.NonNull\" />\r\n        </list>\r\n      </value>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 5215fb6b772a310d5a2be3a2752c4cacd941fe8c)
+++ b/.idea/misc.xml	(date 1652696453374)
@@ -3,6 +3,28 @@
   <component name="DesignSurface">
     <option name="filePathToZoomLevelMap">
       <map>
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable-v24/ic_launcher_foreground.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/about_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/arrow_forward.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/favorite_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/ic_favorite_filled.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/ic_launcher_background.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/ic_music.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/ic_music_player.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/ic_settings.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/log_in_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/log_out_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/menu_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/next_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/pause_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/play_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/previous_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/refresh_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/repeat_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/repeat_one_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/search_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/shuffle_icon.xml" value="0.176" />
+        <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/drawable/undo_icon.xml" value="0.176" />
         <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/layout/activity_main.xml" value="0.264" />
         <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/layout/drawer_header_layout.xml" value="0.264" />
         <entry key="..\:/BTL_Mobile/MusicPlayer/app/src/main/res/layout/fragment_tab.xml" value="0.264" />
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    \r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:7.1.3'\r\n        classpath 'com.google.gms:google-services:4.3.10'\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 5215fb6b772a310d5a2be3a2752c4cacd941fe8c)
+++ b/build.gradle	(date 1652717217014)
@@ -18,7 +18,6 @@
 allprojects {
     repositories {
         google()
-        jcenter()
     }
 }
 
